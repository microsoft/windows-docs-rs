(function() {
    var type_impls = Object.fromEntries([["windows",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanInto%3CIAsyncInfo%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-CanInto%3CIAsyncInfo%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; CanInto&lt;<a class=\"struct\" href=\"windows/Foundation/struct.IAsyncInfo.html\" title=\"struct windows::Foundation::IAsyncInfo\">IAsyncInfo</a>&gt; for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.QUERY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.QUERY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.QUERY\" class=\"constant\">QUERY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = true</h4></section></div></details>","CanInto<IAsyncInfo>","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanInto%3CIInspectable%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-CanInto%3CIInspectable%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; CanInto&lt;IInspectable&gt; for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.QUERY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.QUERY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.QUERY\" class=\"constant\">QUERY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = false</h4></section></div></details>","CanInto<IInspectable>","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanInto%3CIUnknown%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-CanInto%3CIUnknown%3E-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; CanInto&lt;IUnknown&gt; for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.QUERY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.QUERY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.QUERY\" class=\"constant\">QUERY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a> = false</h4></section></div></details>","CanInto<IUnknown>","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Clone-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult, TProgress&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;<div class=\"where\">where\n    TResult: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    TProgress: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Debug-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult, TProgress&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;<div class=\"where\">where\n    TResult: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    TProgress: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"impl\"><a href=\"#impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: RuntimeType, P: RuntimeType&gt; <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;T, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.get\" class=\"fn\">get</a>(&amp;self) -&gt; Result&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Waits for the <code>IAsyncOperationWithProgress&lt;T, P&gt;</code> to finish.</p>\n</div></details></div></details>",0,"windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"impl\"><a href=\"#impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: RuntimeType, P: RuntimeType&gt; <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;T, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ready\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.ready\" class=\"fn\">ready</a>(result: Result&lt;T&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates an <code>IAsyncOperationWithProgress&lt;T, P&gt;</code> that is immediately ready with a value.</p>\n</div></details></div></details>",0,"windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"impl\"><a href=\"#impl-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: RuntimeType, P: RuntimeType&gt; <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;T, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.spawn\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.spawn\" class=\"fn\">spawn</a>&lt;F&gt;(f: F) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; Result&lt;T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates an <code>IAsyncOperationWithProgress&lt;T, P&gt;</code> that waits for the closure to execute on the Windows thread pool.</p>\n</div></details></div></details>",0,"windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.SetProgress\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.SetProgress\" class=\"fn\">SetProgress</a>&lt;P0&gt;(&amp;self, handler: P0) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P0: Param&lt;<a class=\"struct\" href=\"windows/Foundation/struct.AsyncOperationProgressHandler.html\" title=\"struct windows::Foundation::AsyncOperationProgressHandler\">AsyncOperationProgressHandler</a>&lt;TResult, TProgress&gt;&gt;,</div></h4></section><section id=\"method.Progress\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Progress\" class=\"fn\">Progress</a>(\n    &amp;self,\n) -&gt; Result&lt;<a class=\"struct\" href=\"windows/Foundation/struct.AsyncOperationProgressHandler.html\" title=\"struct windows::Foundation::AsyncOperationProgressHandler\">AsyncOperationProgressHandler</a>&lt;TResult, TProgress&gt;&gt;</h4></section><section id=\"method.SetCompleted\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.SetCompleted\" class=\"fn\">SetCompleted</a>&lt;P0&gt;(&amp;self, handler: P0) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P0: Param&lt;<a class=\"struct\" href=\"windows/Foundation/struct.AsyncOperationWithProgressCompletedHandler.html\" title=\"struct windows::Foundation::AsyncOperationWithProgressCompletedHandler\">AsyncOperationWithProgressCompletedHandler</a>&lt;TResult, TProgress&gt;&gt;,</div></h4></section><section id=\"method.Completed\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Completed\" class=\"fn\">Completed</a>(\n    &amp;self,\n) -&gt; Result&lt;<a class=\"struct\" href=\"windows/Foundation/struct.AsyncOperationWithProgressCompletedHandler.html\" title=\"struct windows::Foundation::AsyncOperationWithProgressCompletedHandler\">AsyncOperationWithProgressCompletedHandler</a>&lt;TResult, TProgress&gt;&gt;</h4></section><section id=\"method.GetResults\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.GetResults\" class=\"fn\">GetResults</a>(&amp;self) -&gt; Result&lt;TResult&gt;</h4></section><section id=\"method.Id\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Id\" class=\"fn\">Id</a>(&amp;self) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;</h4></section><section id=\"method.Status\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Status\" class=\"fn\">Status</a>(&amp;self) -&gt; Result&lt;<a class=\"struct\" href=\"windows/Foundation/struct.AsyncStatus.html\" title=\"struct windows::Foundation::AsyncStatus\">AsyncStatus</a>&gt;</h4></section><section id=\"method.ErrorCode\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.ErrorCode\" class=\"fn\">ErrorCode</a>(&amp;self) -&gt; Result&lt;HRESULT&gt;</h4></section><section id=\"method.Cancel\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Cancel\" class=\"fn\">Cancel</a>(&amp;self) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section><section id=\"method.Close\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html#tymethod.Close\" class=\"fn\">Close</a>(&amp;self) -&gt; Result&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></div></details>",0,"windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Interface-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Interface-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; Interface for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IID\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.IID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">IID</a>: GUID = _</h4></section></summary><div class='docblock'>The <code>GUID</code> associated with the interface.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw\" class=\"method trait-impl\"><a href=\"#method.as_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_raw</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section></summary><div class='docblock'>Returns the raw COM interface pointer. The resulting pointer continues to be owned by the <code>Interface</code> implementation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method trait-impl\"><a href=\"#method.into_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_raw</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a></h4></section></summary><div class='docblock'>Returns the raw COM interface pointer and releases ownership. It the caller’s responsibility to release the COM interface pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method trait-impl\"><a href=\"#method.from_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_raw</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates an <code>Interface</code> by taking ownership of the <code>raw</code> COM interface pointer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_borrowed\" class=\"method trait-impl\"><a href=\"#method.from_raw_borrowed\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_raw_borrowed</a>(raw: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self&gt;</h4></section></summary><div class='docblock'>Creates an <code>Interface</code> that is valid so long as the <code>raw</code> COM interface pointer is valid. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, Error&gt;<div class=\"where\">where\n    T: Interface,</div></h4></section></summary><div class='docblock'>Attempts to cast the current interface to another interface using <code>QueryInterface</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_to_any\" class=\"method trait-impl\"><a href=\"#method.cast_to_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast_to_any</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static), Error&gt;<div class=\"where\">where\n    T: ComObjectInner,\n    &lt;T as ComObjectInner&gt;::Outer: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static + IUnknownImpl&lt;Impl = T&gt;,</div></h4></section></summary><div class='docblock'>This casts the given COM interface to [<code>&amp;dyn Any</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_object\" class=\"method trait-impl\"><a href=\"#method.is_object\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_object</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: ComObjectInner,\n    &lt;T as ComObjectInner&gt;::Outer: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static + IUnknownImpl&lt;Impl = T&gt;,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if the given COM interface refers to an implementation of <code>T</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_object_ref\" class=\"method trait-impl\"><a href=\"#method.cast_object_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast_object_ref</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;&lt;T as ComObjectInner&gt;::Outer, Error&gt;<div class=\"where\">where\n    T: ComObjectInner,\n    &lt;T as ComObjectInner&gt;::Outer: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static + IUnknownImpl&lt;Impl = T&gt;,</div></h4></section></summary><div class='docblock'>This casts the given COM interface to [<code>&amp;dyn Any</code>]. It returns a reference to the “outer”\nobject, e.g. <code>&amp;MyApp_Impl</code>, not the inner <code>&amp;MyApp</code> object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_object\" class=\"method trait-impl\"><a href=\"#method.cast_object\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast_object</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;ComObject&lt;T&gt;, Error&gt;<div class=\"where\">where\n    T: ComObjectInner,\n    &lt;T as ComObjectInner&gt;::Outer: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static + IUnknownImpl&lt;Impl = T&gt;,</div></h4></section></summary><div class='docblock'>This casts the given COM interface to [<code>&amp;dyn Any</code>]. It returns a reference to the “outer”\nobject, e.g. <code>MyApp_Impl</code>, not the inner <code>MyApp</code> object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method trait-impl\"><a href=\"#method.downgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">downgrade</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Weak&lt;Self&gt;, Error&gt;</h4></section></summary><div class='docblock'>Attempts to create a [<code>Weak</code>] reference to this object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method trait-impl\"><a href=\"#method.query\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">query</a>(&amp;self, iid: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*const </a>GUID, interface: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a><a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ffi/enum.c_void.html\" title=\"enum core::ffi::c_void\">c_void</a>) -&gt; HRESULT</h4></section></summary><div class='docblock'>Call <code>QueryInterface</code> on this interface <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ref\" class=\"method trait-impl\"><a href=\"#method.to_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_ref</a>(&amp;self) -&gt; InterfaceRef&lt;'_, Self&gt;</h4></section></summary><div class='docblock'>Creates an <code>InterfaceRef</code> for this reference. The <code>InterfaceRef</code> tracks lifetimes statically,\nand eliminates the need for dynamic reference count adjustments (AddRef/Release).</div></details></div></details>","Interface","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoFuture-for-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"impl\"><a href=\"#impl-IntoFuture-for-IAsyncOperationWithProgress%3CT,+P%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: RuntimeType, P: RuntimeType&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html\" title=\"trait core::future::into_future::IntoFuture\">IntoFuture</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;T, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, Error&gt;</h4></section></summary><div class='docblock'>The output that the future will produce on completion.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoFuture\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoFuture\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.IntoFuture\" class=\"associatedtype\">IntoFuture</a> = AsyncFuture&lt;<a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;T, P&gt;&gt;</h4></section></summary><div class='docblock'>Which kind of future are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_future\" class=\"method trait-impl\"><a href=\"#method.into_future\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#tymethod.into_future\" class=\"fn\">into_future</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#associatedtype.IntoFuture\" title=\"type core::future::into_future::IntoFuture::IntoFuture\">IntoFuture</a></h4></section></summary><div class='docblock'>Creates a future from a value. <a href=\"https://doc.rust-lang.org/nightly/core/future/into_future/trait.IntoFuture.html#tymethod.into_future\">Read more</a></div></details></div></details>","IntoFuture","windows::Devices::Sms::GetSmsMessagesOperation"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult, TProgress&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;<div class=\"where\">where\n    TResult: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    TProgress: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","windows::Devices::Sms::GetSmsMessagesOperation"],["<section id=\"impl-Eq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Eq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult, TProgress&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;<div class=\"where\">where\n    TResult: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    TProgress: RuntimeType + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","windows::Devices::Sms::GetSmsMessagesOperation"],["<section id=\"impl-Send-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Send-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section>","Send","windows::Devices::Sms::GetSmsMessagesOperation"],["<section id=\"impl-StructuralPartialEq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult, TProgress&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;<div class=\"where\">where\n    TResult: RuntimeType + 'static,\n    TProgress: RuntimeType + 'static,</div></h3></section>","StructuralPartialEq","windows::Devices::Sms::GetSmsMessagesOperation"],["<section id=\"impl-Sync-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"impl\"><a href=\"#impl-Sync-for-IAsyncOperationWithProgress%3CTResult,+TProgress%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TResult: RuntimeType + 'static, TProgress: RuntimeType + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"windows/Foundation/struct.IAsyncOperationWithProgress.html\" title=\"struct windows::Foundation::IAsyncOperationWithProgress\">IAsyncOperationWithProgress</a>&lt;TResult, TProgress&gt;</h3></section>","Sync","windows::Devices::Sms::GetSmsMessagesOperation"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[36013]}