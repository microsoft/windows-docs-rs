initSidebarItems({"attr":[["implement","Rust structs can use the [`macro@implement`] attribute macro to implement entire WinRT or COM classes or any combination of existing COM and WinRT interfaces."]],"macro":[["build","A macro for generating Windows API bindings to a .rs file at build time."],["generate","A macro for generating Windows API bindings ahead of time."],["include_bindings","Includes the generated bindings into the current context."]],"struct":[["Array","A WinRT array stores elements contiguously in a heap-allocated buffer."],["Error","A WinRT error object consists of both an error code as well as detailed error information for debugging."],["GUID","A globally unique identifier (GUID) used to identify COM and WinRT interfaces."],["HRESULT","A primitive error code value returned by most COM functions."],["HSTRING","A WinRT string, sometimes called an HSTRING, is reference-counted and logically immutable. It should only be used for communicating with WinRT APIs."],["IUnknown","All COM interfaces (and thus WinRT classes and interfaces) implement IUnknown under the hood to provide reference-counted lifetime management as well as the ability to query for additional interfaces that the object may implement."]],"type":[["Result",""]]});